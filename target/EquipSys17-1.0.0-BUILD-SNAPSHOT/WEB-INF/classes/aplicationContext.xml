<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:s="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- First STEP  creat Beans dao and link it to dao-->

						<bean id="dao" class="com.ruk.dao.EquipmentSysImplDao"></bean><!-- on specifie la classe ou a était rédefinit les metode -->
<bean id="metier" class="com.ruk.mettier.EquipmentSysMetier">
<!-- Maintenant on va faire l'injection de dépendance donc onva assocer l'obje dao à metier en faisant appel a proprety -->
<property name="dao" ref="dao"></property>
</bean>

<!--  
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>database.properties</value>
		</property>
	</bean>
	-->
	
<!-- Second STEP Creat our Data source -->
<bean id="props" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  
  
  <!--  <value>file:#{ systemProperties['user.home']}/database.properties</value> --> 
   <property name="locations" value="classpath:META-INF/database.properties"/>
  
  
</bean>

<!--  
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
<property name="url" value="jdbc:mysql://localhost:3306/EquipmentSys17"></property>
<property name="username" value="root"></property>
<property name="password" value=""></property>
</bean>
-->

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	

 <!-- Third SPET Lier le Bean datasource à persistanceunitManager  donc onva configurer JPA-->
<bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
<property name="persistenceXmlLocations">
<list> <value>classpath*:META-INF/persistance.xml</value>
</list>
</property>
<property name="defaultDataSource" ref="dataSource"></property>
</bean>

<!-- Fourth STEP  Creat entityManagerFactory puis le relier ensuite à persistanceunitMana via ref-->

<bean id="enitityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<property name="persistenceUnitManager" ref="persistenceUnitManager"></property>
<property name="persistenceUnitName" value="MY_P_U"></property>
</bean>

<!-- Fith STEp  we create transactionManager then we bind it to entityManagerFactory -->
<bean id="transactionManager"  class="org.springframework.orm.jpa.JpaTransactionManager">
<property name="entityManagerFactory" ref="enitityManagerFactory" ></property>
</bean>

<!-- Sixth STEP pour dire à spring qu'on utulise le gestionnaire baser sur les annotations se trouvant ds un name space tx -->
<tx:annotation-driven transaction-manager="transactionManager" />
<!-- Seveth STEP on ajoute un naame space context  on dit que l'entity manager est baser sur une annotation persistance contest-->
<context:annotation-config></context:annotation-config>

<!-- TRYING Sending Mail Configuration of the Bean -->

	<!-- enable scheduling annotations -->

  
   <task:annotation-driven />
    <bean id="demoServiceBasicUsageFixedDelay" class="com.ruk.sid.sheduller.myTask"></bean>
	
<!-- prececuus de securite spring SPRING SECURITY  default-target-url="/adminUser/userHedit"  -->
	<s:http>
		<s:intercept-url pattern="/adminUser/**" access="ROLE_ADMIN_USER"/>
		
		<s:intercept-url pattern="/adminSimpleUser/**"  access="ROLE_ADMIN_SIMPLE_USER"/>  
	
		<s:intercept-url pattern="/adminUserFileController/**"  access="ROLE_ADMIN_USER"/>
		<s:form-login login-page="/login"  default-target-url="/checkingRole"
			authentication-failure-url="/fail2login" />
		<s:logout logout-success-url="/login?logout" />
		 <s:logout delete-cookies="JSESSIONID"/>
		<s:access-denied-handler error-page="/403page"/>
		
	<s:session-management invalid-session-url="/login">
        <s:concurrency-control expired-url="/login" />
       
</s:session-management>
		
	</s:http>
	

	<s:authentication-manager>
		<s:authentication-provider>
		
			<s:password-encoder hash="plaintext"></s:password-encoder>
			<s:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select email,password,actived
from user where email=?"
				authorities-by-username-query="select u.email,  r.roleName from user u, role r 
where u.roleName = r.roleName and u.email =?"/>

<!--  
			<s:user-service> <s:user name="admin1" password="admin1" authorities="ROLE_ADMIN_USER"/> 
				<s:user name="root" authorities="ROLE_ADMIN_SIMPLE_USER,ROLE_ADMIN_USER" password="bincos" 
				/> </s:user-service> 
				-->
				
		</s:authentication-provider>
	</s:authentication-manager>
	
	<!-- TRYING Sending Mail Configuration of the Bean -->

<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <!-- SMTP settings -->
 <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
    <property name="username" value="bienfaitrukundo@gmail.com" />
    <property name="password" value="bincos4444" />
 
    <property name="javaMailProperties">
        <!-- additional properties specific to JavaMail -->
        <props>
            <prop key="mail.transport.protocol">smtp</prop>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
           <prop key="mail.debug">true</prop>
        </props>
    </property>
</bean>
</beans>